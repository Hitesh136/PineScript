// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© TraderCreatorPro

//@version=5
indicator("Position Size Calculator", "PS KLC", true)
riskCap = input.int(100, title = "Risk Capacity", minval = 10)
lastEntry = false
output = ""
output2 = ""


var shouldUpdate = input.bool(defval = true, title = "Should Continue")

var yearInp = input.int(0, "Year")
var monthInp = input.int(0, "Month")
var dayInp = input.int(0, "day")

globalLines = array.new_line(5)
globalLabels = array.new_label(5)

buildLevels(shouldUpdatDrawings) =>
 
    var line tripleProfitLine = na
    var label tripleProfitLabel = na
    
    var line doubleProfitLine = na
    var label doubleProfitLabel = na

    var line singleProfitLine = na
    var label singleProfitLabel = na

    var line entryLine = na
    var label entryLabel = na

    var line slLine = na
    var label slLabel = na
    // 3x Profit
    tripleProfitLine.delete()
    tripleProfitLabel.delete()
    // globalLabels.set()
    // 2x Profit
    doubleProfitLine.delete()
    doubleProfitLabel.delete()

    // 1x Profit
    singleProfitLine.delete()
    singleProfitLabel.delete()
    
    //Entry
    entryLine.delete()
    entryLabel.delete() 

    //Stoploss
    slLine.delete()
    slLabel.delete()

    if shouldUpdatDrawings  
    
        entry = math.round_to_mintick(high + (high * 0.005))
        sl = math.round_to_mintick(low - (low * 0.005))
    
        singleprofit = entry + ((entry - sl) * 1)
        doueblprofit = entry + ((entry - sl) * 2)
        tripleprofit = entry + ((entry - sl) * 3)

        diff = (entry - sl)
        qty = math.round((riskCap / diff), 0)
        amount = entry * qty 

        tripleProfitLine.delete()

        tripleProfitAmount = (tripleprofit * qty) - amount
        doubleProfitAmount = (doueblprofit * qty) - amount
        singleProfitAmount = (singleprofit * qty) - amount
        distanceStarting = 10
        distanceGap = 10
        loss = amount - (sl * qty)
        // output := "Profit 3x = " + str.tostring(tripleprofit) + " / " + str.tostring(tripleProfitAmount) +  "\nProfit 2x = " + str.tostring(doueblprofit) + " / " + str.tostring(doubleProfitAmount) + "\n\nEntry = " + str.tostring(entry) + " / " +  str.tostring(amount)  +"\nStopLoss = " + str.tostring(sl) + " / " + str.tostring(loss) + "\n\nQTY = " + str.tostring(qty) 

        // 3x Profit 
        // globalLines.set(global, tripleProfitLine, tripleProfitLine)
        tripleProfiltTitle =  "3x - " + str.tostring(tripleProfitAmount) + " / " + str.tostring(tripleprofit)
        tripleProfiltDistance = bar_index + distanceStarting + distanceGap + distanceGap + distanceGap
        tripleProfitLine := line.new(bar_index[4999], tripleprofit, bar_index, tripleprofit, style = line.style_dotted, width = 1, color = color.lime,  extend = extend.right)
        tripleProfitLabel := label.new(tripleProfiltDistance, tripleprofit, tripleProfiltTitle, color = color.rgb(76, 175, 79, 67), style = label.style_label_left, textcolor = color.white, size = size.small)
    
        // 2x Profit 

        doubleProfiltTitle =  "2x - " + str.tostring(doubleProfitAmount) + " / " + str.tostring(doueblprofit)
        doubleProfiltDistance = bar_index + distanceStarting + distanceGap + distanceGap
        doubleProfitLine := line.new(bar_index[4999], doueblprofit, bar_index, doueblprofit, style = line.style_dotted, width = 1, color = color.lime,  extend = extend.right)
        doubleProfitLabel := label.new(doubleProfiltDistance, doueblprofit, doubleProfiltTitle, color = color.rgb(76, 175, 79, 62), style = label.style_label_left, textcolor = color.white, size = size.small)

        // 1x Profit

        singleProfiltTitle = "1x - " + str.tostring(singleProfitAmount) + " / " + str.tostring(singleprofit)
        singleProfiltDistance = bar_index + distanceStarting + distanceGap 
        singleProfitLine := line.new(bar_index[4999], singleprofit, bar_index, singleprofit, style = line.style_dotted, width = 1, color = color.lime,  extend = extend.right)
        singleProfitLabel := label.new(singleProfiltDistance, singleprofit, singleProfiltTitle, color = color.rgb(76, 175, 79, 69), style = label.style_label_left, textcolor = color.white, size = size.small)

        //Entry

        entryTtile = "Entry - " + str.tostring(amount) + " / " + str.tostring(entry) + " / QTY = " + str.tostring(qty)
        entryLine := line.new(bar_index[1], entry, bar_index, entry, style = line.style_dotted, width = 1, color = color.blue,  extend = extend.right)
        entryLabel := label.new(bar_index + distanceStarting, entry, entryTtile, color = color.rgb(33, 149, 243, 75), style = label.style_label_left, textcolor = color.white, size = size.small)
    
        //Stoploss

        stoplossTitle = "SL - " + str.tostring(loss) + " / " + str.tostring(sl)
        slLine := line.new(bar_index[2], sl, bar_index, sl, style = line.style_dotted, width = 1, color = color.red,  extend = extend.right)
        slLabel := label.new(bar_index + distanceStarting, sl, stoplossTitle, color = color.rgb(255, 82, 82, 81), style = label.style_label_left, textcolor = color.white, size = size.small)

// deleteDrawings()
var isTimeValueSet = false
// buildLevels(false)
if year == yearInp and month == monthInp and dayofmonth == dayInp  
    isTimeValueSet = true
    buildLevels(false)
    buildLevels(true)
// else if barstate.islast and isTimeValueSet == false 
// //     // isTimeValueSet = false
//     buildLevels(false)
//     buildLevels(true)
// else 
//     // plot("year")
//     label.new(bar_index, high, str.tostring(3))
    // buildLevels(false)
    
    


